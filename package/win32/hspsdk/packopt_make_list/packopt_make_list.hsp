#cmpopt varinit 0;1

;--------------------------------------------------------------------------------------
;
;	#packoptリスト作成ツール ver 0.7
;
;	By. しまくろねこ
;
;--------------------------------------------------------------------------------------

#include "hsedsdk.as"


#packopt name "packopt_make_list"
#packopt type 0
#packopt xsize 440
#packopt ysize 600
#packopt hide 0
#packopt orgpath 0
#packopt icon "icon.ico"


//-------------------------------------------------------------------------
#define CONFIG_FILE_NAME				"packopt_make_list_dat.ini"
#define CONFIG_WINDOW_POS_X				"#window_pos_x" 	+ "\t"
#define CONFIG_WINDOW_POS_y				"#window_pos_y" 	+ "\t"
#define CONFIG_PACKOPT_NAME				"#name"				+ "\t"
;#define CONFIG_PACKOPT_RUNTIME			"#runtime"			+ "\t"
#define CONFIG_PACKOPT_TYPE				"#type"				+ "\t"
#define CONFIG_PACKOPT_XSIZE			"#xsize"			+ "\t"
#define CONFIG_PACKOPT_YSIZE			"#ysize"			+ "\t"
#define CONFIG_PACKOPT_HIDE_CHECK		"#hide_check"		+ "\t"
#define CONFIG_PACKOPT_HIDE				"#hide"				+ "\t"
#define CONFIG_PACKOPT_ORGPATH_CHECK	"#orgpath_check"	+ "\t"
#define CONFIG_PACKOPT_ORGPATH			"#orgpath"			+ "\t"
#define CONFIG_PACKOPT_ICON				"#icon"				+ "\t"
#define CONFIG_PACKOPT_VERSION			"#version"			+ "\t"
#define CONFIG_PACKOPT_MANIFEST			"#manifest"			+ "\t"
#define CONFIG_PACKOPT_LANG				"#lang"				+ "\t"
#define CONFIG_PACKOPT_UPX				"#upx"				+ "\t"
#define CONFIG_PACKOPT_SPACE_NOT_MAKE	"#space_not_make"	+ "\t"

//-------------------------------------------------------------------------
#define WRITE__FILEVERSION				"_FILEVERSION="
#define WRITE__PRODUCTVERSION			"_PRODUCTVERSION="
#define WRITE_COMMENTS					"Comments="
#define WRITE_COMPANYNAME				"CompanyName="
#define WRITE_FILEDESCRIPTION			"FileDescription="
;#define WRITE_FILEVERSION				"FileVersion="
#define WRITE_INTERNALNAME				"InternalName="
#define WRITE_LEGALCOPYRIGHT			"LegalCopyright="
#define WRITE_ORIGINALFILENAME			"OriginalFilename="
#define WRITE_PRODUCTNAME				"ProductName="
;#define WRITE_PRODUCTVERSION			"ProductVersion="

//-------------------------------------------------------------------------
#const OBJ_ID_PACKOPT_NAME				0
;#const OBJ_ID_PACKOPT_RUNTIME			1
#const OBJ_ID_PACKOPT_TYPE				2
#const OBJ_ID_PACKOPT_XSIZE				3
#const OBJ_ID_PACKOPT_YSIZE				4
#const OBJ_ID_PACKOPT_HIDE_CHECK		5
#const OBJ_ID_PACKOPT_HIDE				6
#const OBJ_ID_PACKOPT_ORGPATH_CHECK		7
#const OBJ_ID_PACKOPT_ORGPATH			8
#const OBJ_ID_PACKOPT_ICON				9
#const OBJ_ID_PACKOPT_VERSION			10
#const OBJ_ID_PACKOPT_MANIFEST			11
#const OBJ_ID_PACKOPT_LANG				12
#const OBJ_ID_PACKOPT_UPX				13
#const OBJ_ID_PACKOPT_SPACE_NOT_MAKE	14

#const OBJ_ID__FILEVERSION_1			15
#const OBJ_ID__FILEVERSION_2			16
#const OBJ_ID__FILEVERSION_3			17
#const OBJ_ID__FILEVERSION_4			18

#const OBJ_ID__PRODUCTVERSION_1			19
#const OBJ_ID__PRODUCTVERSION_2			20
#const OBJ_ID__PRODUCTVERSION_3			21
#const OBJ_ID__PRODUCTVERSION_4			22
#const OBJ_ID_COMMENTS					23
#const OBJ_ID_COMPANYNAME				24
#const OBJ_ID_FILEDESCRIPTION			25
#const OBJ_ID_FILEVERSION				26
#const OBJ_ID_INTERNALNAME				27
#const OBJ_ID_LEGALCOPYRIGHT			28
#const OBJ_ID_ORIGINALFILENAME			29
#const OBJ_ID_PRODUCTNAME				30
#const OBJ_ID_PRODUCTVERSION			31
#const OBJ_ID_CHECKBOX_DEFAULT			32
#const OBJ_ID_FILEWRITE					33
#const OBJ_ID_PUT_TEXT					34
#const OBJ_ID_WRITE_FOLDER				35
#const OBJ_ID_WRITE_FILE_NAME			36

#define APP_TITLE_MAIN					"#packoptリスト作成ツール"
#define APP_VERSION						"0.7"

#const SCREEN_MAIN_WIDTH				440
#const SCREEN_MAIN_HEIGHT				600

#define APP_TITLE_TOOL					"#packopt versionファイル作成ツール"

#const SCREEN_TOOL_WIDTH				430
#const SCREEN_TOOL_HEIGHT				600

#const BUFFER_MAIN						0
#const BUFFER_TOOL						1
#const BUFFER_MENU						2

#const FALSE							0
#const TRUE								1

//-------------------------------------------------------------------------
#module local_mod

#const FALSE						0
#const TRUE							1

#uselib "kernel32"
#func GetEnvironmentVariable					"GetEnvironmentVariableA" sptr, sptr, sptr

#define HSP3_APPDATA_FOLDER						"Hot Soup Processor"

//-------------------------------------------------------------------------
#deffunc func_packopt_ini_file_write str file_name, var str_buff

	sdim pack_ini_file, 1024

	GetEnvironmentVariable "APPDATA", varptr(pack_ini_file), 990
	pack_ini_file + = "\\" + HSP3_APPDATA_FOLDER + "\\" + file_name

	bsave pack_ini_file, str_buff, strlen(str_buff)

	return

//-------------------------------------------------------------------------
#defcfunc func_packopt_ini_file_read str file_name, var file_buff

	sdim pack_ini_file, 1024

	GetEnvironmentVariable "APPDATA", varptr(pack_ini_file), 990
	pack_ini_file + = "\\" + HSP3_APPDATA_FOLDER + "\\" + file_name

	re = FALSE

	exist pack_ini_file
	if strsize >= 0 {
		sdim file_buff, strsize
		bload pack_ini_file, file_buff, strsize
		re = TRUE
	}

	return re

//-------------------------------------------------------------------------
#deffunc func_line int x1, int y1, int x2, int y2

	color 0, 0, 0		: line x1, y1, x2, y2
	color 255, 255, 255	: line x1 + 1, y1 + 1, x2 + 1, y2 + 1
	return

#global
//-------------------------------------------------------------------------

	onexit gosub *config_file_write

	current_dir = dir_cur

//-------------------------------------------------------------------------

	win_pos_x			= 0
	win_pos_y			= 0

	packopt_name		= ""
;	runtime_name		= ""
	exe_type			= 0
	window_width		= ""
	window_height		= ""
	hide_check			= 0
	hide_check_dummy	= -1
	hide_type			= 0
	orgpath_check		= 0
	orgpath_check_dummy	= -1
	orgpath_type		= 0
	icon_file			= ""
	version_set			= ""
	manifest_file		= ""
	lang_set			= ""
	upx_set				= 0
	space_not_make		= 1

	gosub *config_file_read

//-------------------------------------------------------------------------

	menu_window_make_obj_flg = FALSE
	tool_window_make_obj_flg = FALSE

//-------------------------------------------------------------------------

	title APP_TITLE_MAIN + " - Ver " + APP_VERSION
	screen BUFFER_MAIN, SCREEN_MAIN_WIDTH, SCREEN_MAIN_HEIGHT, 0, win_pos_x, win_pos_y
	gsel BUFFER_MAIN, 1
	syscolor 15
	boxf

	dim obj_id, 100

	color 0, 0, 0

	objmode 2
	font msgothic, 12

	input_height = 22

	y_plus = 28

	y = 5
	pos 10, y + 5	: mes "実行ファイル名(\".EXE\")は未入力"
	pos 230, y		: input packopt_name, 200, input_height, 0
	obj_id(OBJ_ID_PACKOPT_NAME) = stat

;	y += y_plus
;	pos 10, y + 5	: mes "ランタイム名"
;	pos 230, y		: input runtime_name, 200, input_height, 0
;	obj_id(OBJ_ID_PACKOPT_RUNTIME) = stat

	y += y_plus
	objsize 200, 30
	pos 10, y + 5	: mes "実行ファイルタイプ"
	pos 230, y		: combox exe_type, 100, "0:EXEファイル\n1:フルスクリーンEXE\n2:スクリーンセーバー"
	obj_id(OBJ_ID_PACKOPT_TYPE) = stat

	y += y_plus
	pos 10, y + 5	: mes "初期ウィンドウXサイズ"
	pos 230, y + 5	: mes "X:"
	pos 245, y		: input window_width, 50, input_height, 0
	obj_id(OBJ_ID_PACKOPT_XSIZE) = stat

	;y += 35
	pos 320, y + 5	: mes "Y:"
	pos 335, y		: input window_height, 50, input_height, 0
	obj_id(OBJ_ID_PACKOPT_YSIZE) = stat

	y += y_plus
	objsize 200, 30
	pos 10, y - 5	: chkbox "初期ウィンドウ非表示SW", hide_check
	obj_id(OBJ_ID_PACKOPT_HIDE_CHECK) = stat
	pos 230, y		: combox hide_type, 100, "0:ウィンドウ表示\n1:ウィンドウ非表示"
	obj_id(OBJ_ID_PACKOPT_HIDE) = stat

	y += y_plus
	objsize 200, 30
	pos 10, y - 5	: chkbox "初期ディレクトリ維持SW", orgpath_check
	obj_id(OBJ_ID_PACKOPT_ORGPATH_CHECK) = stat
	pos 230, y		: combox orgpath_type, 100, "0:ディレクトリ移動の有効化\n1:ディレクトリ移動の無効化"
	obj_id(OBJ_ID_PACKOPT_ORGPATH) = stat

	y += y_plus
	pos 10, y + 5	: mes "アイコンファイル名"
	pos 230, y		: input icon_file, 200, input_height, 0
	obj_id(OBJ_ID_PACKOPT_ICON) = stat

	y += y_plus
	pos 10, y + 5	: mes "バージョンリソース設定(ファイル名)"
	pos 230, y		: input version_set, 98, input_height, 0
	obj_id(OBJ_ID_PACKOPT_VERSION) = stat

	objsize 50, input_height
	pos 330, y		: button gosub "開く", *open_file_window
	pos 380, y		: button gosub "新規", *open_menu_window

	y += y_plus
	pos 10, y + 5	: mes "マニフェスト設定(ファイル名)"
	pos 230, y		: input manifest_file, 200, input_height, 0
	obj_id(OBJ_ID_PACKOPT_MANIFEST) = stat

	y += y_plus
	pos 10, y + 5	: mes "言語コード設定"
	pos 230, y		: input lang_set, 200, input_height, 0
	obj_id(OBJ_ID_PACKOPT_LANG) = stat

	y += y_plus
	objsize 200, 30
	pos 10, y + 5	: mes "UPX圧縮設定"
	pos 230, y		: combox upx_set, 0, "圧縮なし\n圧縮あり";input upx_set, 200, 24, 0
	obj_id(OBJ_ID_PACKOPT_UPX) = stat

	func_line 10, y + 30, SCREEN_MAIN_WIDTH - 10, y + 30

	y += y_plus
	objsize 200, 24
	pos 10, y + 5	: chkbox "空白の項目は出力しない", space_not_make
	obj_id(OBJ_ID_PACKOPT_SPACE_NOT_MAKE) = stat

	y += 30
	objsize 200, 35
	pos 10, y
	button gosub "#packoptリスト作成", *info_refresh
	objsize 200, 35
	pos 230, y	: button gosub "クリップボードにコピー", *clip_copy

	y += 50
	packopt_list = ""
	pos 10, y	: mesbox packopt_list, 420, 160, 1	:	obj_id_packopt_list = stat :  hInput = objinfo(stat, 2)

	y += 170
	objsize 420, 35
	pos 10, y	: button gosub "標準HSPスクリプトエディタのカーソルの位置に貼り付け", *paste_editor

//-------------------------------------------------------------------------

	gosub *obj_value_set

//-------------------------------------------------------------------------
*main

	win_pos_x = ginfo(4)
	win_pos_y = ginfo(5)

	win_tool_pos_x = win_pos_x
	win_tool_pos_y = win_pos_y

	if hide_check != hide_check_dummy {
		hide_check_dummy = hide_check
		objenable obj_id(OBJ_ID_PACKOPT_HIDE), hide_check
	}

	if orgpath_check != orgpath_check_dummy {
		orgpath_check_dummy = orgpath_check
		objenable obj_id(OBJ_ID_PACKOPT_ORGPATH), orgpath_check
	}

	wait 1

	goto *main

//-------------------------------------------------------------------------
*info_refresh

	packopt_list = ""

	if space_not_make == 0 {
		packopt_list += "#packopt name \""		+ packopt_name	+ "\""	+ "\n"
;		packopt_list += "#packopt runtime \""	+ runtime_name	+ "\""	+ "\n"
		packopt_list += "#packopt type "		+ exe_type				+ "\n"
		packopt_list += "#packopt xsize "		+ window_width			+ "\n"
		packopt_list += "#packopt ysize "		+ window_height			+ "\n"
		packopt_list += "#packopt hide "		+ hide_type				+ "\n"
		packopt_list += "#packopt orgpath "		+ orgpath_type			+ "\n"
		packopt_list += "#packopt icon \""		+ icon_file		+ "\""	+ "\n"
		packopt_list += "#packopt version \""	+ version_set	+ "\""	+ "\n"
		packopt_list += "#packopt manifest \""	+ manifest_file	+ "\""	+ "\n"
		packopt_list += "#packopt lang \""		+ lang_set		+ "\""	+ "\n"
		if upx_set == 1 {
			packopt_list += "#packopt upx \""	+ str(upx_set)	+ "\""
		}
	} else {
		if strlen(packopt_name) > 0		: packopt_list += "#packopt name \""	+ packopt_name	+ "\""	+ "\n"
;		if strlen(runtime_name) > 0		: packopt_list += "#packopt runtime \""	+ runtime_name	+ "\""	+ "\n"
		packopt_list += "#packopt type "		+ exe_type				+ "\n"
		if strlen(window_width) > 0		: packopt_list += "#packopt xsize "		+ window_width			+ "\n"
		if strlen(window_height) > 0	: packopt_list += "#packopt ysize "		+ window_height			+ "\n"
		if hide_check == 1				: packopt_list += "#packopt hide "		+ hide_type				+ "\n"
		if orgpath_check == 1			: packopt_list += "#packopt orgpath "	+ orgpath_type			+ "\n"
		if strlen(icon_file) > 0		: packopt_list += "#packopt icon \""	+ icon_file		+ "\""	+ "\n"
		if strlen(version_set) > 0		: packopt_list += "#packopt version \""	+ version_set	+ "\""	+ "\n"
		if strlen(manifest_file) > 0	: packopt_list += "#packopt manifest \""+ manifest_file	+ "\""	+ "\n"
		if strlen(lang_set) > 0			: packopt_list += "#packopt lang \""	+ lang_set		+ "\""	+ "\n"
		if upx_set == 1					: packopt_list += "#packopt upx \""		+ str(upx_set)	+ "\""
	}

	objprm obj_id_packopt_list, packopt_list

	return

//-------------------------------------------------------------------------
*config_file_read

	file_buff = ""
	re = func_packopt_ini_file_read(CONFIG_FILE_NAME, file_buff)

	if re {
		notesel file_buff

		line_buff = ""
		repeat notemax
			noteget line_buff, cnt
			if instr(line_buff, 0, CONFIG_WINDOW_POS_X) >= 0 {
				win_pos_x = int(strmid(line_buff, strlen(CONFIG_WINDOW_POS_X), strlen(line_buff) - strlen(CONFIG_WINDOW_POS_X)))
			}
			if instr(line_buff, 0, CONFIG_WINDOW_POS_Y) >= 0 {
				win_pos_y = int(strmid(line_buff, strlen(CONFIG_WINDOW_POS_Y), strlen(line_buff) - strlen(CONFIG_WINDOW_POS_Y)))
			}

			if instr(line_buff, 0, CONFIG_PACKOPT_NAME) >= 0 {
				packopt_name = strmid(line_buff, strlen(CONFIG_PACKOPT_NAME), strlen(line_buff) - strlen(CONFIG_PACKOPT_NAME))
			}
;			if instr(line_buff, 0, CONFIG_PACKOPT_RUNTIME) >= 0 {
;				runtime_name = strmid(line_buff, strlen(CONFIG_PACKOPT_RUNTIME), strlen(line_buff) - strlen(CONFIG_PACKOPT_RUNTIME))
;			}
			if instr(line_buff, 0, CONFIG_PACKOPT_TYPE) >= 0 {
				exe_type = int(strmid(line_buff, strlen(CONFIG_PACKOPT_TYPE), strlen(line_buff) - strlen(CONFIG_PACKOPT_TYPE)))
			}
			if instr(line_buff, 0, CONFIG_PACKOPT_XSIZE) >= 0 {
				window_width = strmid(line_buff, strlen(CONFIG_PACKOPT_XSIZE), strlen(line_buff) - strlen(CONFIG_PACKOPT_XSIZE))
			}
			if instr(line_buff, 0, CONFIG_PACKOPT_YSIZE) >= 0 {
				window_height = strmid(line_buff, strlen(CONFIG_PACKOPT_YSIZE), strlen(line_buff) - strlen(CONFIG_PACKOPT_YSIZE))
			}
			if instr(line_buff, 0, CONFIG_PACKOPT_HIDE_CHECK) >= 0 {
				hide_check = int(strmid(line_buff, strlen(CONFIG_PACKOPT_HIDE_CHECK), strlen(line_buff) - strlen(CONFIG_PACKOPT_HIDE_CHECK)))
			}
			if instr(line_buff, 0, CONFIG_PACKOPT_HIDE) >= 0 {
				hide_type = int(strmid(line_buff, strlen(CONFIG_PACKOPT_HIDE), strlen(line_buff) - strlen(CONFIG_PACKOPT_HIDE)))
			}
			if instr(line_buff, 0, CONFIG_PACKOPT_ORGPATH_CHECK) >= 0 {
				orgpath_check = int(strmid(line_buff, strlen(CONFIG_PACKOPT_ORGPATH_CHECK), strlen(line_buff) - strlen(CONFIG_PACKOPT_ORGPATH_CHECK)))
			}
			if instr(line_buff, 0, CONFIG_PACKOPT_ORGPATH) >= 0 {
				orgpath_type = int(strmid(line_buff, strlen(CONFIG_PACKOPT_ORGPATH), strlen(line_buff) - strlen(CONFIG_PACKOPT_ORGPATH)))
			}
			if instr(line_buff, 0, CONFIG_PACKOPT_ICON) >= 0 {
				icon_file = strmid(line_buff, strlen(CONFIG_PACKOPT_ICON), strlen(line_buff) - strlen(CONFIG_PACKOPT_ICON))
			}
			if instr(line_buff, 0, CONFIG_PACKOPT_VERSION) >= 0 {
				version_set = strmid(line_buff, strlen(CONFIG_PACKOPT_VERSION), strlen(line_buff) - strlen(CONFIG_PACKOPT_VERSION))
			}
			if instr(line_buff, 0, CONFIG_PACKOPT_MANIFEST) >= 0 {
				manifest_file = strmid(line_buff, strlen(CONFIG_PACKOPT_MANIFEST), strlen(line_buff) - strlen(CONFIG_PACKOPT_MANIFEST))
			}
			if instr(line_buff, 0, CONFIG_PACKOPT_LANG) >= 0 {
				lang_set = strmid(line_buff, strlen(CONFIG_PACKOPT_LANG), strlen(line_buff) - strlen(CONFIG_PACKOPT_LANG))
			}
			if instr(line_buff, 0, CONFIG_PACKOPT_UPX) >= 0 {
				upx_set = int(strmid(line_buff, strlen(CONFIG_PACKOPT_UPX), strlen(line_buff) - strlen(CONFIG_PACKOPT_UPX)))
			}
			if instr(line_buff, 0, CONFIG_PACKOPT_SPACE_NOT_MAKE) >= 0 {
				space_not_make = int(strmid(line_buff, strlen(CONFIG_PACKOPT_SPACE_NOT_MAKE), strlen(line_buff) - strlen(CONFIG_PACKOPT_SPACE_NOT_MAKE)))
			}

		loop

		noteunsel
	}

	return

//-------------------------------------------------------------------------
*obj_value_set

	objprm obj_id(OBJ_ID_PACKOPT_NAME),				packopt_name
;	objprm obj_id(OBJ_ID_PACKOPT_RUNTIME),			runtime_name
	objprm obj_id(OBJ_ID_PACKOPT_TYPE),				exe_type
	objprm obj_id(OBJ_ID_PACKOPT_XSIZE),			window_width
	objprm obj_id(OBJ_ID_PACKOPT_YSIZE),			window_height
	objprm obj_id(OBJ_ID_PACKOPT_HIDE_CHECK),		hide_check
	objprm obj_id(OBJ_ID_PACKOPT_HIDE),				hide_type
	objprm obj_id(OBJ_ID_PACKOPT_ORGPATH_CHECK),	orgpath_check
	objprm obj_id(OBJ_ID_PACKOPT_ORGPATH),			orgpath_type
	objprm obj_id(OBJ_ID_PACKOPT_ICON),				icon_file
	objprm obj_id(OBJ_ID_PACKOPT_VERSION),			version_set
	objprm obj_id(OBJ_ID_PACKOPT_MANIFEST),			manifest_file
	objprm obj_id(OBJ_ID_PACKOPT_LANG),				lang_set
	objprm obj_id(OBJ_ID_PACKOPT_UPX),				upx_set
	objprm obj_id(OBJ_ID_PACKOPT_SPACE_NOT_MAKE),	space_not_make

	return

//-------------------------------------------------------------------------
*clip_copy

	sendmsg hInput, $B1, , -1
	sendmsg hInput, $0301

	return

//-------------------------------------------------------------------------
*config_file_write

	switch wparam
	case BUFFER_MAIN
		file_buff  = ""
		file_buff += CONFIG_WINDOW_POS_X			+ str(win_pos_x)		+ "\n"
		file_buff += CONFIG_WINDOW_POS_Y			+ str(win_pos_y)		+ "\n"
		file_buff += "\n"
		file_buff += CONFIG_PACKOPT_NAME 			+ packopt_name			+ "\n"
;		file_buff += CONFIG_PACKOPT_RUNTIME			+ runtime_name			+ "\n"
		file_buff += CONFIG_PACKOPT_TYPE			+ str(exe_type)			+ "\n"
		file_buff += CONFIG_PACKOPT_XSIZE			+ str(window_width) 	+ "\n"
		file_buff += CONFIG_PACKOPT_YSIZE			+ str(window_height)	+ "\n"
		file_buff += CONFIG_PACKOPT_HIDE_CHECK		+ str(hide_check)		+ "\n"
		file_buff += CONFIG_PACKOPT_HIDE			+ str(hide_type)		+ "\n"
		file_buff += CONFIG_PACKOPT_ORGPATH_CHECK	+ str(orgpath_check)	+ "\n"
		file_buff += CONFIG_PACKOPT_ORGPATH			+ str(orgpath_type)		+ "\n"
		file_buff += CONFIG_PACKOPT_ICON			+ icon_file				+ "\n"
		file_buff += CONFIG_PACKOPT_VERSION			+ version_set			+ "\n"
		file_buff += CONFIG_PACKOPT_MANIFEST		+ manifest_file			+ "\n"
		file_buff += CONFIG_PACKOPT_LANG			+ lang_set				+ "\n"
		file_buff += CONFIG_PACKOPT_UPX				+ str(upx_set)			+ "\n"
		file_buff += CONFIG_PACKOPT_SPACE_NOT_MAKE	+ str(space_not_make)	+ "\n"

		func_packopt_ini_file_write CONFIG_FILE_NAME, file_buff

		end
		swbreak
	case BUFFER_TOOL
		tool_window_close = TRUE
		return
		swbreak
	case BUFFER_MENU
		menu_window_close = TRUE
		gsel BUFFER_MENU, -1
		gsel BUFFER_MAIN, 1
		return
		swbreak
	swend

//-------------------------------------------------------------------------
*open_file_window

	dialog "txt", 16, "テキストファイル"

	if stat == 1 {
		version_set = getpath(refstr, 8)
		gosub *obj_value_set
	}

	return

//-------------------------------------------------------------------------
*open_menu_window

	open_version_file_flg	= FALSE
	menu_window_close		= FALSE
	open_tool_window_flg	= FALSE

	gsel BUFFER_MAIN, -1

	if menu_window_make_obj_flg == FALSE {
		screen BUFFER_MENU, 300, 180, 0, win_pos_x, win_pos_y

		title "Versionファイル選択"

		syscolor 15
		boxf

		objmode 2
		font msgothic, 12

		color 0, 0, 0
		objsize 250, 35
		pos 55, 10	: mes "Versionファイルを開いて編集する"
		pos 25, 30	: button gosub "Versionファイルを開く", *file_open
		pos 55, 100	: mes "Versionファイルを新たに作成する"
		pos 25, 120	: button gosub "Versionファイルを新規作成する", *open_tool
	}

	gsel BUFFER_MENU, 1

	menu_window_make_obj_flg = TRUE

	repeat
		if open_version_file_flg {
			gosub *open_tool_window
			menu_window_close = TRUE
		}
		if open_tool_window_flg {
			gosub *open_tool_window
			menu_window_close = TRUE
		}
		if menu_window_close {
			break
		}
		wait 1
	loop

	return

//-------------------------------------------------------------------------
*open_tool

	open_tool_window_flg = TRUE

	return

//-------------------------------------------------------------------------
*open_tool_window

	;------------------------------------
	win_tool_pos_x			= 0
	win_tool_pos_y			= 0

	_fileversion_1			= ""
	_fileversion_2			= ""
	_fileversion_3			= ""
	_fileversion_4			= ""

	_productversion_1		= ""
	_productversion_2		= ""
	_productversion_3		= ""
	_productversion_4		= ""

	comments				= ""
	companyname				= ""
	filedescription			= ""
	fileversion				= ""
	internalname			= ""
	legalcopyright			= ""
	originalfilename		= ""
	productname				= ""
	productversion			= ""
	space_not_make_2		= 1

	put_text_buff			= ""

	version_file_name		= "version.txt"
	;------------------------------------

	tab_id = 0
	hsed_getacttabid tab_id
	tab_id_file_path = ""
	hsed_getpath tab_id_file_path, tab_id
	tab_id_file_path = getpath(tab_id_file_path, 32)
	strrep tab_id_file_path, "\\", "/"

	if open_version_file_flg {
		version_file_name = getpath(open_file_name, 8)
		tab_id_file_path = getpath(open_file_name, 32)
		strrep tab_id_file_path, "\\", "/"
	}

	tool_window_close = FALSE

	gsel BUFFER_MENU, -1

	if tool_window_make_obj_flg == FALSE {

		screen BUFFER_TOOL, SCREEN_TOOL_WIDTH, SCREEN_TOOL_HEIGHT, screen_fixedsize, win_tool_pos_x, win_tool_pos_y
		title APP_TITLE_TOOL

		syscolor 15
		boxf

		color 0, 0, 0

		objmode 2
		font msgothic, 12

		input_width = 190
		input_height = 22

		y_plus = 25

		;objsize 200, 35
		;y = 5
		;pos 10, y	: button gosub "Versionファイルを開く", *file_open

		;y += y_plus + 15
		;func_line 10, y, SCREEN_TOOL_WIDTH - 10 , y

		color 0, 0, 0

		objsize 220, 22

		y = 5
		pos 10, y + 5	: mes "_FILEVERSION(ファイルバージョン)"
		pos 230, y	: input _fileversion_1, 40, input_height, 0							:	obj_id(OBJ_ID__FILEVERSION_1) = stat
		pos 280, y	: input _fileversion_2, 40, input_height, 0							:	obj_id(OBJ_ID__FILEVERSION_2) = stat
		pos 330, y	: input _fileversion_3, 40, input_height, 0							:	obj_id(OBJ_ID__FILEVERSION_3) = stat
		pos 380, y	: input _fileversion_4, 40, input_height, 0							:	obj_id(OBJ_ID__FILEVERSION_4) = stat
		
		y += y_plus
		pos 10, y + 5	: mes "_PRODUCTVERSION(製品バージョン)"
		pos 230, y	: input _productversion_1, 40, input_height, 0						:	obj_id(OBJ_ID__PRODUCTVERSION_1) = stat
		pos 280, y	: input _productversion_2, 40, input_height, 0						:	obj_id(OBJ_ID__PRODUCTVERSION_2) = stat
		pos 330, y	: input _productversion_3, 40, input_height, 0						:	obj_id(OBJ_ID__PRODUCTVERSION_3) = stat
		pos 380, y	: input _productversion_4, 40, input_height, 0						:	obj_id(OBJ_ID__PRODUCTVERSION_4) = stat

		y += y_plus
		pos 10, y + 5	: mes "Comments(コメント)"
		pos 230, y	: input comments, input_width, input_height, 0						:	obj_id(OBJ_ID_COMMENTS) = stat

		y += y_plus
		pos 10, y + 5	: mes "CompanyName(企業名)"
		pos 230, y	: input companyname, input_width, input_height, 0					:	obj_id(OBJ_ID_COMPANYNAME) = stat

		y += y_plus
		pos 10, y + 5	: mes "FileDescription(ファイルの説明)"
		pos 230, y	: input filedescription, input_width, input_height, 0				:	obj_id(OBJ_ID_FILEDESCRIPTION) = stat

		;y += y_plus
		;pos 10, y	: mes "FileVersion(ファイルバージョン)"
		;pos 230, y	: input fileversion, input_width, input_height, 0					:	obj_id(OBJ_ID_FILEVERSION) = stat

		y += y_plus
		pos 10, y + 5	: mes "InternalName(内部名)"
		pos 230, y	: input internalname, input_width, input_height, 0					:	obj_id(OBJ_ID_INTERNALNAME) = stat

		y += y_plus
		pos 10, y + 5	: mes "LegalCopyright(著作権)"
		pos 230, y	: input legalcopyright, input_width, input_height, 0				:	obj_id(OBJ_ID_LEGALCOPYRIGHT) = stat

		y += y_plus
		pos 10, y + 5	: mes "OriginalFilename(元のファイル名)"
		pos 230, y	: input originalfilename, input_width, input_height, 0				:	obj_id(OBJ_ID_ORIGINALFILENAME) = stat

		y += y_plus
		pos 10, y + 5	: mes "ProductName(製品名)"
		pos 230, y	: input productname, input_width, input_height, 0					:	obj_id(OBJ_ID_PRODUCTNAME) = stat

		;y += y_plus
		;pos 10, y	: mes "ProductVersion(製品バージョン)"
		;pos 230, y	: input productversion, input_width, input_height, 0				:	obj_id(OBJ_ID_PRODUCTVERSION) = stat

		objsize 200, 22
		y += y_plus
		pos 10, y;	: button gosub "チェックをデフォルトに戻す", *checkbox_default

		y += 10;y_plus
		func_line 10, y, SCREEN_TOOL_WIDTH - 10 , y

		objsize 200, 24
		pos 10, y + 5	: chkbox "空白の項目は出力しない", space_not_make_2

		objsize 200, 35
		y += y_plus + 5
		pos 10, y	: button gosub "テキスト作成", *make_text
		pos 220, y	: button gosub "クリップボードにコピー", *clip_copy_tool

		y += y_plus + 15
		pos 10, y	: mesbox put_text_buff, 410, 150, 1									:	obj_id(OBJ_ID_PUT_TEXT) = stat	:   hInput_tool = objinfo(stat, 2)

		color 0, 0, 0 
		y += y_plus + 130
		pos 10, y	: mes "保存するフォルダ"
		y += 15
		pos 10, y	: input tab_id_file_path, 410, input_height, 0						:	obj_id(OBJ_ID_WRITE_FOLDER) = stat

		y += y_plus
		pos 10, y	: mes "保存するファイル名"
		y += 15
		pos 10, y	: input version_file_name, 200, input_height, 0						:	obj_id(OBJ_ID_WRITE_FILE_NAME) = stat

		y += y_plus + 5
		func_line 10, y, SCREEN_TOOL_WIDTH - 10 , y

		y += 5
		pos 10, y	: button gosub "保存(+ウィンドウを閉じる)", *file_write				:	obj_id(OBJ_ID_FILEWRITE) = stat
		pos 220, y	: button gosub "キャンセル", *close_window

	}

	gsel BUFFER_TOOL, 1

	width ,,win_pos_x, win_pos_y

	if open_version_file_flg {
		gosub *file_value_set
	}

	gosub *obj_value_set_tool

	tool_window_make_obj_flg = TRUE

	repeat
		win_tool_pos_x = ginfo(4)
		win_tool_pos_y = ginfo(5)

		win_pos_x = win_tool_pos_x
		win_pos_y = win_tool_pos_y

		obj_enable = FALSE
		if (strlen(put_text_buff) > 0) && (strlen(version_file_name) > 0) {
			obj_enable = TRUE
		}
		objenable obj_id(OBJ_ID_FILEWRITE), obj_enable
		if tool_window_close {
			break
		}
		wait 1
	loop

	gsel BUFFER_TOOL, -1
	gsel BUFFER_MAIN, 1

	width ,,win_tool_pos_x, win_tool_pos_y

	return

//-------------------------------------------------------------------------
*close_window

	tool_window_close = TRUE

	return

//-------------------------------------------------------------------------
*file_open

	dialog "txt", 16, "テキストファイル"

	if stat == 1 {
		open_file_name			= refstr
		open_version_file_flg	= TRUE
		menu_window_close		= TRUE
	}

	return

//-------------------------------------------------------------------------
*file_value_set
	
	notesel file_buff
	file_buff = ""
	noteload open_file_name

	_fileversion_1			= ""
	_fileversion_2			= ""
	_fileversion_3			= ""
	_fileversion_4			= ""

	_productversion_1		= ""
	_productversion_2		= ""
	_productversion_3		= ""
	_productversion_4		= ""

	comments				= ""
	companyname				= ""
	filedescription			= ""
	fileversion				= ""
	internalname			= ""
	legalcopyright			= ""
	originalfilename		= ""
	productname				= ""
	productversion			= ""

	line_buff = ""
	repeat notemax
		noteget line_buff, cnt

		if instr(line_buff, 0, WRITE__FILEVERSION) >= 0 {
			get_buff = strmid(line_buff, strlen(WRITE__FILEVERSION), strlen(line_buff) - strlen(WRITE__FILEVERSION))
			split get_buff, ".", _fileversion_1, _fileversion_2, _fileversion_3, _fileversion_4
		}
		if instr(line_buff, 0, WRITE__PRODUCTVERSION) >= 0 {
			get_buff = strmid(line_buff, strlen(WRITE__PRODUCTVERSION), strlen(line_buff) - strlen(WRITE__PRODUCTVERSION))
			split get_buff, ".", _productversion_1, _productversion_2, _productversion_3, _productversion_4
		}
		if instr(line_buff, 0, WRITE_COMMENTS) >= 0 {
			comments = strmid(line_buff, strlen(WRITE_COMMENTS), strlen(line_buff) - strlen(WRITE_COMMENTS))
		}
		if instr(line_buff, 0, WRITE_COMPANYNAME) >= 0 {
			companyname = strmid(line_buff, strlen(WRITE_COMPANYNAME), strlen(line_buff) - strlen(WRITE_COMPANYNAME))
		}
		if instr(line_buff, 0, WRITE_FILEDESCRIPTION) >= 0 {
			filedescription = strmid(line_buff, strlen(WRITE_FILEDESCRIPTION), strlen(line_buff) - strlen(WRITE_FILEDESCRIPTION))
		}
		;if instr(line_buff, 0, WRITE_FILEVERSION) >= 0 {
		;	fileversion = strmid(line_buff, strlen(WRITE_FILEVERSION), strlen(line_buff) - strlen(WRITE_FILEVERSION))
		;}
		if instr(line_buff, 0, WRITE_INTERNALNAME) >= 0 {
			internalname = strmid(line_buff, strlen(WRITE_INTERNALNAME), strlen(line_buff) - strlen(WRITE_INTERNALNAME))
		}
		if instr(line_buff, 0, WRITE_LEGALCOPYRIGHT) >= 0 {
			legalcopyright = strmid(line_buff, strlen(WRITE_LEGALCOPYRIGHT), strlen(line_buff) - strlen(WRITE_LEGALCOPYRIGHT))
		}
		if instr(line_buff, 0, WRITE_ORIGINALFILENAME) >= 0 {
			originalfilename = strmid(line_buff, strlen(WRITE_ORIGINALFILENAME), strlen(line_buff) - strlen(WRITE_ORIGINALFILENAME))
		}
		if instr(line_buff, 0, WRITE_PRODUCTNAME) >= 0 {
			productname = strmid(line_buff, strlen(WRITE_PRODUCTNAME), strlen(line_buff) - strlen(WRITE_PRODUCTNAME))
		}
		;if instr(line_buff, 0, WRITE_PRODUCTVERSION) >= 0 {
		;	productversion = strmid(line_buff, strlen(WRITE_PRODUCTVERSION), strlen(line_buff) - strlen(WRITE_PRODUCTVERSION))
		;}
	loop

	noteunsel

	;gosub *open_tool_window
	;gosub *obj_value_set_tool
	;gosub *make_text

	;gsel BUFFER_MENU, -1
	;gsel BUFFER_TOOL, 1

	return

//-------------------------------------------------------------------------
*make_text

	file_buff = ""

	if space_not_make_2 == 0 {
		file_buff += "_FILEVERSION=" + _fileversion_1
		file_buff += "." + _fileversion_2
		file_buff += "." + _fileversion_3
		file_buff += "." + _fileversion_4
		file_buff += "\n"
		file_buff += "_PRODUCTVERSION=" + _productversion_1
		file_buff += "." + _productversion_2
		file_buff += "." + _productversion_3
		file_buff += "." + _productversion_4
		file_buff += "\n"
		file_buff += "Comments="			+ comments			+ "\n"
		file_buff += "CompanyName="			+ companyname		+ "\n"
		file_buff += "FileDescription="		+ filedescription	+ "\n"
		;file_buff += "FileVersion="		+ fileversion		+ "\n"
		file_buff += "InternalName="		+ internalname		+ "\n"
		file_buff += "LegalCopyright="		+ legalcopyright	+ "\n"
		file_buff += "OriginalFilename="	+ originalfilename	+ "\n"
		file_buff += "ProductName="			+ productname		+ "\n"
		;file_buff += "ProductVersion="		+ productversion	+ "\n"
	} else {
		if strlen(_fileversion_1) > 0 {
			file_buff += "_FILEVERSION=" + _fileversion_1
			if strlen(_fileversion_2) > 0 : file_buff += "." + _fileversion_2
			if strlen(_fileversion_3) > 0 : file_buff += "." + _fileversion_3
			if strlen(_fileversion_4) > 0 : file_buff += "." + _fileversion_4
			file_buff += "\n"
		}
		if strlen(_productversion_1) > 0 {
			file_buff += "_PRODUCTVERSION=" + _productversion_1
			if strlen(_productversion_2) > 0 : file_buff += "." + _productversion_2
			if strlen(_productversion_3) > 0 : file_buff += "." + _productversion_3
			if strlen(_productversion_4) > 0 : file_buff += "." + _productversion_4
			file_buff += "\n"
		}
		if strlen(comments) > 0			: file_buff += "Comments="			+ comments + "\n"
		if strlen(companyname) > 0		: file_buff += "CompanyName="		+ companyname + "\n"
		if strlen(filedescription) > 0	: file_buff += "FileDescription="	+ filedescription + "\n"
		;if strlen(fileversion) > 0		: file_buff += "FileVersion="		+ fileversion + "\n"
		if strlen(internalname) > 0		: file_buff += "InternalName="		+ internalname + "\n"
		if strlen(legalcopyright) > 0	: file_buff += "LegalCopyright="	+ legalcopyright + "\n"
		if strlen(originalfilename) > 0	: file_buff += "OriginalFilename="	+ originalfilename + "\n"
		if strlen(productname) > 0		: file_buff += "ProductName="		+ productname + "\n"
		;if strlen(productversion) > 0	: file_buff += "ProductVersion="	+ productversion + "\n"
	}

	put_text_buff = file_buff

	objprm obj_id(OBJ_ID_PUT_TEXT), put_text_buff

	return

//-------------------------------------------------------------------------
*file_write

	end_str = strmid(tab_id_file_path, -1, 1)

	if (end_str != "\\") && (end_str != "/") {
		tab_id_file_path += "/"
	}

	write_path = tab_id_file_path + version_file_name


	dialog write_path + "\n\nに保存しますか？", 2, "確認"

	if stat == 6 {

		write_flg = FALSE
	
		exist write_path
		if strsize >= 0 {
			dialog write_path + "\nは既に存在します。\n上書きしますか？", 3, "名前を付けて保存の確認"
			if stat == 6 {
				write_flg = TRUE
			}
		} else {
			write_flg = TRUE
		}

		if write_flg {
			bsave write_path, put_text_buff, strlen(put_text_buff)
			version_set = version_file_name
	
			gsel BUFFER_MAIN, -1
			gosub *obj_value_set
			gsel BUFFER_TOOL, 1
	
			tool_window_close = TRUE
		}
	}

	return

//-------------------------------------------------------------------------
*obj_value_set_tool

	objprm obj_id(OBJ_ID__FILEVERSION_1),		_fileversion_1
	objprm obj_id(OBJ_ID__FILEVERSION_2),		_fileversion_2
	objprm obj_id(OBJ_ID__FILEVERSION_3),		_fileversion_3
	objprm obj_id(OBJ_ID__FILEVERSION_4),		_fileversion_4
	objprm obj_id(OBJ_ID__PRODUCTVERSION_1),	_productversion_1
	objprm obj_id(OBJ_ID__PRODUCTVERSION_2),	_productversion_2
	objprm obj_id(OBJ_ID__PRODUCTVERSION_3),	_productversion_3
	objprm obj_id(OBJ_ID__PRODUCTVERSION_4),	_productversion_4
	objprm obj_id(OBJ_ID_COMMENTS),				comments
	objprm obj_id(OBJ_ID_COMPANYNAME),			companyname
	objprm obj_id(OBJ_ID_FILEDESCRIPTION),		filedescription
;	objprm obj_id(OBJ_ID_FILEVERSION),			fileversion
	objprm obj_id(OBJ_ID_INTERNALNAME),			internalname
	objprm obj_id(OBJ_ID_LEGALCOPYRIGHT),		legalcopyright
	objprm obj_id(OBJ_ID_ORIGINALFILENAME),		originalfilename
	objprm obj_id(OBJ_ID_PRODUCTNAME),			productname
;	objprm obj_id(OBJ_ID_PRODUCTVERSION),		productversion
	objprm obj_id(OBJ_ID_WRITE_FOLDER),			tab_id_file_path
	objprm obj_id(OBJ_ID_PUT_TEXT),				put_text_buff

	return

//-------------------------------------------------------------------------
*clip_copy_tool

	sendmsg hInput_tool, $B1, , -1
	sendmsg hInput_tool, $0301

	return

//-------------------------------------------------------------------------
*paste_editor

	dialog "標準HSPスクリプトエディタのカーソルの位置に貼り付けますか？", 2, "確認"

	if stat == 6 {
		hsed_sendstr packopt_list
	}

	return
