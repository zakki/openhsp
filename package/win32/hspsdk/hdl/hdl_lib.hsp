
;	Windows 雑用ライブラリ s.programs

#ifndef _HDL_LIB
#define _HDL_LIB  1

;============================================================
; get_hsp_appdata_path
;  HSP が使う Application Data の Path
;============================================================

#module
; winapi
#uselib "kernel32"
#func GetEnvironmentVariable	"GetEnvironmentVariableA" sptr, sptr, sptr
;--------------------------------------------------
#deffunc get_hsp_appdata_path array v1
	org_dir = dir_cur
	sdim v1, 1000
	GetEnvironmentVariable "APPDATA", varptr(v1), 990

	if "" ! v1 {
		subdir = "Hot Soup Processor"
		chdir v1
		dirlist astr, subdir, 5 : if stat = 0 : mkdir subdir // MAKEDIR subdir
		chdir org_dir
		v1 += "\\" + subdir
	}

	if "" = v1 : v1 = org_dir
	return
#global

;============================================================
; ステータスバー モジュール
;============================================================

#module
; winapi
#uselib "comctl32"
#func InitCommonControlsEx "InitCommonControlsEx" var
#uselib "user32"
#func GetWindowRect "GetWindowRect" int, var
#func DestroyIcon "DestroyIcon" int
#uselib "shell32"
#func ExtractIconEx "ExtractIconExA" sptr, sptr, sptr, sptr, sptr

; const
#define ctype objhwnd(%1)  objinfo(%1, 2)
#const  WS_CHILD	0x40000000
#const  WS_VISIBLE	0x10000000
#define RECT_LEFT	0
#define RECT_TOP	1
#define RECT_RIGHT	2
#define RECT_BOTTOM	3
;--------------------------------------------------
#deffunc status_mes int i, str inp
	if hwnd_status {
		a = inp
		sendmsg hwnd_status, 0x0401, i, varptr(a) ; SB_SETTEXT
		; アイコン消去
		if icon.i {
			sendmsg hwnd_status, 0x040F, i, 0 ; SB_SETICON
			DestroyIcon icon.i
			icon.i = 0
		}
	}
	return
;--------------------------------------------------
#deffunc status_icon int i, str fn, int id
	if hwnd_status {
		; アイコン設定
		if icon.i : DestroyIcon icon.i : icon.i = 0
		ExtractIconEx fn, id, 0, varptr(icon.i), 1
		if icon.i : sendmsg hwnd_status, 0x040F, i, icon.i ; SB_SETICON
	}
	return
;--------------------------------------------------
#deffunc status_resize
	if hwnd_status {
		a = ginfo_winx*70/100, ginfo_winx*85/100, -1 ; パーツ位置 (70:15:15 固定)
		sendmsg hwnd_status, 0x0404, 3, varptr(a) ; SB_SETPARTS
		sendmsg hwnd_status, 0x0005, 0, 0 ; WM_SIZE
	}
	return
;--------------------------------------------------
#defcfunc status_height
	dim a, 4 ; RECT
	if hwnd_status {
		GetWindowRect hwnd_status, a
	}
	return (a.RECT_BOTTOM - a.RECT_TOP)
;--------------------------------------------------
#deffunc status_create
	; init (4.70 以上の comctl32.dll が必要)
	a = 8, 0x00000004 ; ICC_BAR_CLASSES
	InitCommonControlsEx a
	winobj "msctls_statusbar32", "", 0, WS_CHILD | WS_VISIBLE, 0, 0, 0, 0
	hwnd_status = objhwnd(stat)
	dim icon, 3 ; 各パーツのアイコンハンドル格納
	status_resize ; パーツ初期化
	return
; icon sample
;	status_icon 0, "explorer.exe", 7 ; (i)
;	status_icon 0, "explorer.exe", 8 ; <!>
;	status_icon 0, "explorer.exe", 9 ; (X)
;	status_icon 0, "shell32.dll", 22 ; ○━
;	status_icon 0, "shell32.dll", 23 ; (?)
#global

;============================================================
; ウィンドウ位置のセーブとロード
;  セーブデータにアプリケーションデータも乗り合い可
;============================================================
;  ウィンドウ情報 : cfgdat(0-10)
;  ユーザーエリア : cfgdat(11-127)
;  設定ファイルサイズ 512 bytes

; global var cfgdat
#define global cfgdat _cfgdat@

#module
; config
#define CFG_SIZE 512

; winapi
#uselib "user32"
#func	ShowWindow		"ShowWindow" int, int
#func	GetWindowPlacement	"GetWindowPlacement" int, var
#func	SetWindowPlacement	"SetWindowPlacement" int, var
#cfunc	GetForegroundWindow	"GetForegroundWindow"
#cfunc	GetWindowThreadProcessId	"GetWindowThreadProcessId" int, int
#func	SetForegroundWindow	"SetForegroundWindow" int
#func	BringWindowToTop	"BringWindowToTop" int
#func	AttachThreadInput	"AttachThreadInput" int, int, int
#func	SetWindowLongA		"SetWindowLongA" sptr, sptr, sptr
#uselib "kernel32"
#cfunc	GetCurrentThreadId	"GetCurrentThreadId"

; const
#const  SW_HIDE			0
#const  SW_SHOWNORMAL		1	; 通常
#const  SW_SHOWMINIMIZED	2	; アイコン化
#const  SW_SHOWMAXIMIZED	3	; 最大
#const  GWL_STYLE		-16
#const  WS_OVERLAPPEDWINDOW	0x00CF0000
#const  WS_CLIPCHILDREN		0x02000000
;--------------------------------------------------
#deffunc Window_resizable
	SetWindowLongA hwnd, GWL_STYLE, WS_OVERLAPPEDWINDOW | WS_CLIPCHILDREN
	return
;--------------------------------------------------
#deffunc Window_top	; ウィンドウを通常化
	; get wp
	dim wp, 11
	wp = 44  ; WINDOWPLACEMENT.length
	GetWindowPlacement hwnd, wp

	if (wp.2 & 3) = SW_SHOWMINIMIZED {
		ShowWindow hwnd, SW_SHOWNORMAL
	}

	; force foreground
	hwt = GetForegroundWindow()
	if hwt ! hwnd {
		a = GetWindowThreadProcessId(hwt, 0)
		b = GetCurrentThreadId()
		AttachThreadInput a, b, 1
		SetForegroundWindow hwnd
		AttachThreadInput a, b, 0
		BringWindowToTop hwnd
	}
	return
;--------------------------------------------------
#deffunc Config_restore_window
	; default window pos
	if cfgdat ! 44 : cfgdat = 44, 0, 1, -1, -1, -1, -1, ginfo_dispx*10/100, ginfo_dispy*20/100, ginfo_dispx*70/100, ginfo_dispy*90/100

	; restore window
	SetWindowPlacement hwnd, cfgdat
	Window_top
	return
;--------------------------------------------------
#deffunc Config_open str p1
	; set filename
	cfgfile = p1

	; load config
	dim cfgdat, 128
	exist cfgfile
	if strsize = CFG_SIZE : bload cfgfile, cfgdat
	return
;--------------------------------------------------
#deffunc Config_close
	cfgdat = 44 ; WINDOWPLACEMENT.length
	GetWindowPlacement hwnd, cfgdat

	bsave cfgfile, cfgdat, CFG_SIZE
	return
#global

;============================================================
; プロセス間 メモリ共有 モジュール
;============================================================
; 仕様
; ・保護モード 読み書き可
; ・最大サイズ 4KB

#module
; winapi
#uselib "kernel32"
#cfunc	CreateFileMapping	"CreateFileMappingA" int, int, int, int, int, str
#cfunc	GetLastError		"GetLastError"
#cfunc	MapViewOfFile		"MapViewOfFile" int, int, int, int, int
#func	UnmapViewOfFile		"UnmapViewOfFile" sptr
#func	CloseHandle		"CloseHandle" int
;--------------------------------------------------
#deffunc filemap_create str inp
	hMapobj = CreateFileMapping(-1, 0, 4, 0,4096, inp)
	lasterr = GetLastError()
	mapptr = MapViewOfFile(hMapobj, 2, 0, 0, 0)
	return
;--------------------------------------------------
#deffunc filemap_close
	UnmapViewOfFile mapptr
	CloseHandle hMapobj
	return
;--------------------------------------------------
#defcfunc filemap_viewptr
	return mapptr
;--------------------------------------------------
#defcfunc filemap_already_exists
	; ERROR_ALREADY_EXISTS 183
	return (lasterr = 183)
#global

;============================================================
; bload_utf_safe
;	(encode.as を改造)
;============================================================

#module "mod_encbus"

#const global CODEPAGE_S_JIS            932 ; Shift-JIS
#const global CODEPAGE_EUC_JP         51932 ; EUC-JP
#const global CODEPAGE_JIS            50220 ; iso-2022-jp(JIS)
#const global CODEPAGE_UTF_7          65000 ; utf-7
#const global CODEPAGE_UTF_8          65001 ; utf-8
#const global CODEPAGE_UNICODE         1200 ; Unicode
#const global CODEPAGE_UNICODE_BE      1201 ; Unicode(Big-Endian)
#const global CODEPAGE_AUTODET_ALL    50001 ; auto detect all
#const global CODEPAGE_AUTODET        50932 ; auto detect

#usecom IMultiLanguage@mod_encbus	"{275c23e1-3747-11d0-9fea-00aa003f8646}" \
									"{275c23e2-3747-11d0-9fea-00aa003f8646}"
#comfunc MuLang_ConvertString 9 var, int, int, var, var, var, var

#deffunc _encode_init
	newcom ml, IMultiLanguage
	return

#deffunc _encode_term onexit
	delcom ml
	return

#deffunc __FromSJIS@mod_encbus str _src, int srcCodepage, var dest, int destCodepage, local src, local srcSize, local destSize, local pdwMode
	pdwMode = 0
	srcSize = -1
	destSize= 0
	src		= _src
	sdim dest
	MuLang_ConvertString ml, pdwMode, srcCodepage, destCodepage, src, srcSize, dest, destSize
	sdim dest, destSize + 1
	MuLang_ConvertString ml, pdwMode, srcCodepage, destCodepage, src, srcSize, dest, destSize
	return destSize

#defcfunc _ToSJIS@mod_encbus var src, int srcCodepage, int destCodepage, local dest
	__FromSJIS src, srcCodepage, dest, destCodepage
	return dest

#define ctype	eucjp2sjis(%1)		_ToSJIS@mod_encbus(%1, CODEPAGE_EUC_JP, CODEPAGE_S_JIS)
#define ctype	jis2sjis(%1)		_ToSJIS@mod_encbus(%1, CODEPAGE_JIS,    CODEPAGE_S_JIS)
#define ctype	utf7n2sjis(%1)		_ToSJIS@mod_encbus(%1, CODEPAGE_UTF_7,  CODEPAGE_S_JIS)
#define ctype	utf8n2sjis(%1)		_ToSJIS@mod_encbus(%1, CODEPAGE_UTF_8,  CODEPAGE_S_JIS)

#define ctype IS_UTF8_BOM(%1)	((lpeek(%1) & 0xffffff) = 0xBFBBEF)
#define ctype UTF8J_SCORE(%1)	((instr(%1,,"縺")>=0)+(instr(%1,,"繧")>=0)+(instr(%1,,"繝")>=0))
#define ctype SJISJ_SCORE(%1)	((instr(%1,,"の")>=0)+(instr(%1,,"ー")>=0)+(instr(%1,,"に")>=0))

#deffunc bload_utf_safe str fn, var buf
	buf = ""
	exist fn
	if strsize > 0 {
		sdim buf, strsize + 16
		bload fn, buf
		if UTF8J_SCORE(buf) > SJISJ_SCORE(buf) | IS_UTF8_BOM(buf) {
			_encode_init
			buf = utf8n2sjis(buf)
		}
	}
	return
#global

;============================================================
; misc
;============================================================

#uselib "kernel32"
#func GetModuleFileName	"GetModuleFileNameA" int, var, int
#func GetTempPath		"GetTempPathA" sptr, var
#func WinExec			"WinExec" sptr, sptr

#uselib "user32"
#cfunc	MoveWindow	"MoveWindow" sptr, sptr, sptr, sptr, sptr, sptr
#func	CharLower	"CharLowerA" var
#func	PostMessage	"PostMessageA" int, int, int, int
#func	SendMessage	"SendMessageA" int, int, int, int
; menu
#func CreateMenu	"CreateMenu"
#cfunc CreatePopupMenu	"CreatePopupMenu"
#func AppendMenu	"AppendMenuA"     int,int,int,sptr
#func SetMenu		"SetMenu"         int,int
#func DrawMenuBar	"DrawMenuBar"     int
#func CheckMenuItem	"CheckMenuItem"   int, int, int

; open file skiperror
#uselib "shell32.dll"
#func	ShellExecute	"ShellExecuteA" int, str, str, str, str, int
#define	exec_file(%1)	ShellExecute 0, "", %1, "", "", 1


#endif

