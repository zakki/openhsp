material Textured
{
    u_inverseTransposeWorldViewMatrix = INVERSE_TRANSPOSE_WORLD_VIEW_MATRIX
    u_lightColor = SCENE_LIGHT_COLOR
    u_lightDirection = SCENE_LIGHT_DIRECTION
    u_worldViewProjectionMatrix = WORLD_VIEW_PROJECTION_MATRIX
    
    sampler u_diffuseTexture
    {
        mipmap = true
        wrapS = CLAMP
        wrapT = CLAMP
        minFilter = LINEAR_MIPMAP_LINEAR
        magFilter = LINEAR
    }

    renderState
    {
        cullFace = true
        depthTest = true
    }
    
    technique
    {
        pass 
        {
            vertexShader = res/shaders/textured.vert
            fragmentShader = res/shaders/textured.frag
        }
    }
}

material bodyUV : Textured
{
    u_matrixPalette = MATRIX_PALETTE
    
    sampler u_diffuseTexture
    {
        path = res/body_SD.png
        wrapS = REPEAT
        wrapT = REPEAT
    }

    technique
    {
        pass 
        {
            defines = SKINNING;SKINNING_JOINT_COUNT 12;VERTEX_COLOR
        }
    }
}

material headUV : Textured
{
    u_matrixPalette = MATRIX_PALETTE
    
    sampler u_diffuseTexture
    {
        path = res/head_SD.png
        wrapS = REPEAT
        wrapT = REPEAT
    }

    technique
    {
        pass 
        {
            defines = SKINNING;SKINNING_JOINT_COUNT 12;VERTEX_COLOR
        }
    }
}

