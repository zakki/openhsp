------------------------------------------------------------------------------
HSP ver3.6 beta TESTING MANUAL                      HSP : Hot Soup Processor  
ＨＳＰβテスト版説明書               Copyright 2019 (c) ONION software/onitama
------------------------------------------------------------------------------

・はじめに

このアーカイブには、Hot Soup Processor ver3.6β版のファイルが含まれています。
Hot Soup Processor 3.6β版は、アップデートされたHSP3.5の機能やSDKを
検証するためのバージョンとなっています。
このアーカイブに含まれる内容は、テスト版であり未実装の機能や、
不具合が含まれていることをご了承の上お使い下さい。


・インストール方法

アーカイブは、以下の構成になっています。

+---hsp36beta             ルートフォルダ
    +---common	          標準のスクリプトヘッダ
    +---hsphelp	          ワンキーヘルプデータ
    +---doclib	          ドキュメントフォルダ
    +---android	          android版HSP3Dishランタイム
    +---iOS	          iOS版HSP3Dishランタイム
    +---hsp3js	          WebGL版HSP3Dishランタイム
    +---runtime	          Windows版ランタイム
    +---sample	          サンプルスクリプト

アーカイブに含まれる「hsp35beta」フォルダを、ハードディスクに展開してご使用ください。(推奨パスは「C:\hsp36beta」になります)
β版は、HSP3.5(または3.51)リリース版と共存させることが可能です。HSP3.5リリース版がインストールされているフォルダ(通常は、「C:\hsp35」になります)に上書きしないよう注意してください。(HSP3.6β版の各種設定は、既存のHSP3.5とも共有されます。)
hsp35betaフォルダ以下にあるスクリプトエディタ(hsed3.exe)を始めとする各種ツールを使用して、3.6β版の機能を利用することができます。
(以前のβ版を使用している方は、古い「hsp36beta」フォルダを削除した後に、再度コピーを行なってください)


・OneDriveでの最新版の提供について

開発中の最新版は、随時OneDriveでも公開されます。
「ダウンロード」から全体のアーカイブ(hsp35betaフォルダの内容)を取得可能です。

HSP3.6β版(OneDrive)
https://onedrive.live.com/embed?cid=EC425522ED849DA7&resid=EC425522ED849DA7%211229&authkey=AB-pNztAqBp6BcU


・Linux版の提供について

LinuxのGUI環境(X Window System)及びRaspberry Pi(Raspbian)で動作するバージョンについては、
最新版をgithubにて公開しています。

git clone https://github.com/onitama/OpenHSP

のような形で取得してください。
詳しくは、以下のページをご覧ください。
最新版の入手及び、インストール方法についても説明されています。

HSP3 for Linux/Raspberry Pi
http://hsp.tv/make/hsp3linux_pi.html


・objcolor命令について

	配置オブジェクトの配色を指定するためのobjcolor命令が新規に追加されています。

	objcolor p1,p2,p3	配置オブジェクトの配色を指定する

		p1,p2,p3=0〜255(0) : 色コード（R,G,Bの輝度）

	入力ボックス等の配色を設定することができます。
	objcolor命令による配色を有効にするためには、あらかじめobjmode命令のオプションで
	「objmode_usecolor」を指定する必要があります。

		objmode objmode_usecolor

	mesbox、input命令による入力ボックスは、rgbcolorで指定した文字色、color命令で指定した
	背景色が適用されます。
	また、mesboxによるテキスト入力ボックスは、[ctrl]+[A]キーにより全選択できるよう
	修正されています。


・rgbcolor命令について

	24bitカラーコードを指定するためのrgbcolor命令が追加されています。
	従来、RGBそれぞれを「color 1,2,3」のように分けてパラメーターを記述していたものを
	「rgbcolor $010203」のような形で記述することができます。
	Web(html)等で使用する「#112233」のようなRGBコードと親和性の高い指定方法です。


・zipファイルの圧縮解凍サポートについて

	ZLibWrap.dllライブラリを使用したzipファイル圧縮解凍をサポートしました。
	シンプルな2つの命令で、スクリプトからファイルの圧縮、解凍を行うことが可能です。

		#include "zipfile.as"

	を記述することで、以下の命令を使用することができます。
	(実行の際には、ZLibWrap.dllファイルが必要となります。)

	ZipCompress "srcfiles", "zipfile"

		"srcfiles"で指定したファイル(ワイルドカード使用可)を
		"zipfile"で指定したファイルに圧縮して保存します。

	ZipExtract "zipfile", "path"

		"zipfile"で指定した圧縮ファイルを、"path"で指定したフォルダに解凍します。

	詳しくは、それぞれの命令ヘルプ、サンプルを参照してください


・MUCOM88プラグインについて

	HSP3.6では、MML記述によるFM音源再生をサポートするMUCOM88プラグインを標準で同梱しています。
	NECのパソコンPC-8801シリーズで動作していた、FM音源のドライバーを再現したMUCOM88 Windowsが持つ機能を
	コントロールすることができます。
	MUCOM88プラグインを使用することにより、単純な音楽の再生から、MMLの解釈までスクリプト言語から
	幅広く制御することができます。
	FM音源(OPNA)6音+PSG音源(3声)+リズム音源+PCM音源の合計11チャンネルをMML言語により記述できます。
	Windowsのサウンド再生処理は、DirectX8以降のDirectSoundを使用し、Windows XP以降の環境で、
	追加のコンポーネントを用意することなく動作させることができます。
	MUCOM88プラグインの詳細は、付属のマニュアル(docs/hspmucom.txt)それぞれの命令ヘルプ、
	サンプル(samples/mucom88)を参照してください。

	HSPMUCOMは、Open MUCOM88プロジェクトの一部として公開されています。
	Open MUCOM88プロジェクトについては、以下を参照してください。

	Open MUCOM88
	https://onitama.tv/mucom88/

	Windows上で動作するMUCOM88 Windowsツール及びサンプルMMLが公開されています。
	HSPMUCOM.DLL及びソースコードは、無償(非営利)である限りは自由に紹介、
	複製、再配布することができます。その際には必ずドキュメントと
	ライセンス表記も含めるようにしてください。

	・Portable Z80 emulation作者 Yasuo Kuwahara氏
	  http://www.geocities.jp/kwhr0/
	・fmgen作者 cisc氏
	  http://www.retropc.net/cisc/
	・MUCOM88作者 古代祐三氏
	  https://twitter.com/yuzokoshiro
	・HSPMUCOM作者 おにたま(ONION software)
	  https://www.onionsoft.net/


・hspinetプラグインの更新について

	hspinetプラグインのhttp/httpsリクエストで、
	PUT/DELETEメソッドに対応したnetrequest_put、netrequest_deleteの
	命令が追加されています。
	これにより、より多くのWebAPIを利用することが可能になります。


・64bit(x64)版ランタイムについて

	64bit(x64)アプリとして動作するHSP3標準ランタイム(hsp3_64.exe)は、
	標準でunicode(UTF-8)文字ベースで動作するものに変更されました。
	使用する場合は、スクリプトの先頭に以下の行を指定してください。

		#include "hsp3_64.as"

	動作の仕様は、HSP3UTF(UTF-8)版ランタイムと同様になっています。
	64bit(x64)ランタイムは、64bit版のWindows上でのみ動作します。


・HSP3DishのiOS,android版更新について

	HSP3DishのiOS,android版は、それぞれの新しいSDKに対応しています。

	iOS版	  : XCode9以降用 iOS12,64bit対応
	android版 : Android SDK 7.0 (API 24),64bit対応、
	            SDKr25、NDK r12以降、AdMob(Google Firebase)対応

	iOS、android版ともに64bitバイナリの出力に対応しています。
	それぞれ対応したバージョンのSDKや開発環境が必要となりますので、
	詳しくは、マニュアルを参照してください。

		hsp3dish.htm (HSP3Dishマニュアルインデックス)

	既存のプロジェクトが正しくビルドできなくなる可能性があるため、
	既存のプロジェクトは、再度作成し直すことを推奨します。


・HGIMG4の更新について

	HSP3.6β1版では、それまでのHGIMG4から大きく修正を行なっています。
	より強力で使いやすくなるよう、各種機能を見直しました。
	以前のバージョンからの上位互換で動作するよう設計されていますが、
	一部の機能で動作が異なる場合がありますので、過去に作成したスクリプトを
	動作させる際にはご注意ください。
	詳しく使い方は、HGIMG4プログラミングガイドをご覧ください。

		HGIMG4プログラミングガイド
		docs/hgimg4.html

	HSP3.6β版で追加変更された項目の概要は以下の通りです。

	・FBXモデル変換の更新

	複雑なFBXモデルを変換する際にエラーが出ることがあった処理を大幅に修正しました。
	ボーンを含むモデルをアニメーションも含めて正しく変換することができます。
	新しく、HGIMG4 Unity連携ガイドを同梱しました。
	3Dツール「Unity」と連携してモデルデータやアニメーションの変換を行う方法を解説しています。

		HGIMG4 Unity連携ガイド
		docs/hgimg4_unity.html

	この連携を利用して作られた、「プロ生ちゃんデモ」(sample/pronama3d)も
	サンプルとして同梱されています。

	・システムの安定化とエラーログ取得

	エラーが発生した際の原因を知るためのログ出力を強化しました。
	3Dモデルのロード時や、アニメーション適用時、シェーダーコンパイル時などの
	詳細なエラーがログとして出力されます。
	また、ログの出力をOn/Offするためのスイッチをsysreq(システムリクエスト)項目に
	追加されています。

		setreq SYSREQ_LOGWRITE,0	; ログ出力を抑制

	・gpscrmat命令の追加

	gpscrmat命令が追加されています。これにより、オフスクリーンテクスチャバッファを参照する
	マテリアルを生成します。マテリアルを独自に生成することにより、オフスクリーンにレンダリングされた
	画像イメージをテクスチャとしてシェーダーから再利用することが可能になります。

	オフスクリーンに描画した内容をテクスチャとして再利用することで、詳細な鏡面反射(映り込み)、
	影の生成などに応用することができます。

	・gpcamera命令に平行投影カメラのオプションを追加

	カメラを生成するgpcamera命令にカメラタイプのパラメーターオプションを追加しています。
	カメラタイプ値に1を指定することで、平行投影(Orthographic)を行うカメラを設定することが可能です。

	・キューブマップテクスチャのサポート

	マテリアルのオプションパラメーターに、GPOBJ_MATOPT_CUBEMAPが追加されています。
	キューブマップは、6面方向の画像をまとめた特殊な形式で環境マップやスカイボックスなどに
	利用することができます。
	(キューブマップ画像は、+X,-X,+Y,-Y,+Z,-Z放送の6画像を縦に連結した1枚の.PNG形式を使用する
	必要があります。)

	・カメラごとのレンダリンググループ設定

	オブジェクトのレンダリンググループを設定する、setobjrender命令が追加されています。
	これにより、カメラごとに表示する/しないという設定をオブジェクトに与えることができます。
	また、ライティングのグループも設定することができ、オブジェクトごとにライトの反映を
	コントロールすることができます。

		setobjrender id,rendergroup,lightgroup

			id(0) : オブジェクトID
			 rendergroup(1) : レンダリンググループ値
			lightgroup(1) : ライティンググループ値

	レンダリンググループ値は、カメラやライトが持つレンダリンググループ値と同一である場合は、
	有効となります。
	通常は、オブジェクト、カメラともにグループ1が設定されています。特定のカメラからの表示のみ
	表示を無効にしたい場合などに利用できます。
	ライティンググループ値は、特定のライトに対して有効/無効を切り替えるものです。
	ライトが持つライティンググループ値と異なる場合は、ライトが無効となります。
	それぞれのグループ値は、1,2,4,8,16,32,64,128,256,512,1024,2048,4096,8192,16384,32768の中から
	任意のビットを組み合わせて指定可能です。


・古いプラグイン・ランタイムの同梱終了について

	以下のプラグイン・ランタイムは、古いバージョンのHSP3でサポートしていましたが
	HSP3.6には付属していません。

		・HSPLetランタイム
		・HGIMG/HGIMGXプラグイン
		・llmod3モジュール

	これらは長い期間更新がなく、古いシステムに依存しているため新しく使用することは推奨できません。
	アップデートされたHSPから使用できなくなるわけではありませんが、フルセット版への同梱は
	終了させて頂きますのでご了承ください。


・更新履歴

	詳しい更新履歴は、docs/history.txt をご覧ください。


・謝辞

	OpenHSPで多くのご協力を頂いた、zakkiさん、fujidigさん、sharkppさんに感謝致します。
	多くの助言を頂いたHSP-Dev MLメンバーの皆様、ありがとうございました。


・著作権および連絡先

	β版を使用したスクリプト・実行ファイルの公開、ライセンスについては
	HSP3.5と同様の規定で自由に行なっていただいて構いません。
	ただし、十分テストが行なわれていないテスト版であることを留意しておいてください。
	あくまで、自己の責任の範囲で運用してください。
	不具合やお気づきの点がありましたら、お知らせ頂けると嬉しいです。

	onion softwareは本プログラムによって生じた、いかなる損害についても
	保証いたしません。自己の責任の範囲で使用してください。
	HSPおよび周辺ツールは、Microsoft Visual Studio 2017によってコンパイルされています。

	このソフトに関するお問い合わせ、感想、ご意見などは以下のメールアドレスまで。

	Homepage: http://www.onionsoft.net/
	          http://hsp.tv/
        e-mail  : hsp@onionsoft.net

------------------------------------------------------------------------------
                                                     README.TXT / end of file 
------------------------------------------------------------------------------
