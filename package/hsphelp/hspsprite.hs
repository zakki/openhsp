;
;	HSP help manager用 HELPソースファイル
;	(先頭が「;」の行はコメントとして処理されます)
;
%type
拡張命令
%ver
3.6
%note
hsp3dish.asまたはhgimg4.asをインクルードすること。
%date
2020/05/20
%author
onitama
%dll
hsp3dish
%url
http://www.onionsoft.net/
%port
Win
%portinfo
Windows XP以降及びHSP3Dishがサポートするシステム上で動作します。



%index
es_dist
2点間距離算出
%group
拡張画面制御命令
%prm
p1,p2,p3,p4,p5
p1=結果を代入する変数
p2,p3=点Aの座標
p4,p5=点Bの座標

%inst
(p2,p3)から(p4,p5)までの距離を求め、変数p1に代入します。計算結果は小数部8bitの固定小数です。




%index
es_set
スプライト設定
%group
拡張画面制御命令
%prm
p1,p2,p3,p4,p5,p6
p1=スプライトNo.
p2=スプライトX座標
p3=スプライトY座標
p4=キャラクタNo.
p5=option値
p6=優先順位(-32768〜32767)

%inst
スプライトを登録します。
p1は、スプライトNo.(0〜511)、(p2,p3)は画面上でのスプライトの座標になります。
この座標を左上として、p4で指定したキャラクタNo.が表示されます。
スプライト座標は、-32767〜32767までの範囲が設定可能です。
^
p5でスプライト固有のオプション値を設定します。(この値は現在未使用です)
^
p6でスプライトの優先順位を指定します。優先順位は値が小さいほど手前に表示されるようになり、同一値の場合はスプライトの小さい方が優先されます。
また、 従来通りスプライトNo.の小さい順に描画するようにすることもできます。

%href
es_pat
es_draw



%index
es_blink
スプライト点滅設定
%group
拡張画面制御命令
%prm
p1,p2,p3
p1=スプライトNo.
p2=点滅フラグ(1〜3)
p3=点滅カウント初期値(-1or1〜)

%inst
^p
点滅フラグ=1 : 点滅無し、カウントが0になったらスプライトを消滅させる
点滅フラグ=2 : 点滅あり、カウントが0になったら点滅をやめる
点滅フラグ=3 : 点滅あり、カウントが0になったらスプライトを消滅させる
^p
スプライトの点滅を設定します。 これまでes_flag命令で設定していたものを独立・拡張した命令です。
ここでの設定は es_flag命令を実行するとリセットされます。
p3に-1を設定すると、カウントは無限になります。




%index
es_bye
システム解放
%group
拡張画面制御命令
%inst
スプライトシステムの切り離しをします。
それまでに確保されていたメモリをすべて解放します。
通常は自動的に呼び出されるので、特に明示的に実行する必要はありません。



%index
es_put
キャラクタ画面表示
%group
拡張画面制御命令
%prm
p1,p2,p3
p1=putする左上X座標
p2=putする左上Y座標
p3=putするキャラクタNo.

%inst
スプライト用のキャラクタパターンとして登録されているデータを、指定した座標に表示します。
この命令は、スプライトとは関係なく画面にキャラクタを転送する命令です。




%index
es_window
スプライト表示エリア設定
%group
拡張画面制御命令
%prm
p1,p2,p3,p4
p1=スプライト表示基点X座標
p2=スプライト表示基点Y座標
p3=スプライトを表示するX座標
p4=スプライトを表示するY座標

%inst
この命令により、スプライトを画面内の限られた範囲内にのみ表示することが可能です。指定した範囲内がスプライトの表示エリアになります。
^
スプライト以外の描画命令には、この範囲は適用されません。



%index
es_area
スプライト有効エリア設定
%group
拡張画面制御命令
%prm
p1,p2,p3,p4
p1=有効エリアの左上X座標
p2=有効エリアの左上Y座標
p3=有効エリアの右下X座標
p4=有効エリアの右下Y座標

%inst
スプライトの有効エリアを設定します。
スプライト座標が(p1,p2)-(p3,p4)の範囲内にないものは、 自動的に削除されます。
^
スプライトの表示範囲が設定されると(es_window命令)自動的に、 スプライト有効エリアも再設定されます。
%href
es_window




%index
es_find
スプライト検索
%group
拡張画面制御命令
%prm
p1,p2,p3,p4,p5
p1=スプライトNo.が代入される変数名
p2=検索対象となるtype値
p3=検索を開始するスプライトNo.
p4=検索を終了するスプライトNo.
p5=増分

%inst
登録されているスプライトの中で指定したtype値を持つスプライトNo. を検索します。
p2のtype値には、複数のtypeを同時に指定することができます。
たとえば、type1とtype4を対象にする場合は、1+4で5を指定します。
^
p2の指定を省略するか、 0を指定した場合にはすべてのtype値を持つスプライトが検索の対象になります。
^
検索は、p3で指定されたスプライトNo.からp4で指定されたNo.まで順番に探していきます。
これを省略すると、No.0からすべてのスプライトを検索します。
該当するスプライトが見つかった時点で、p1に結果を代入して終わります。
検索の結果、該当するスプライトがなかった場合には、-1が代入されます。
^
p5は検索するスプライトNo.の増分を指定するもので、 省略するとp3、p4から自動的に設定されますので通常は指定しなくても構いません。



%index
es_size
キャラクタサイズ指定
%group
拡張画面制御命令
%prm
p1,p2,p3,p4
p1=キャラクタのXサイズ
p2=キャラクタのYサイズ
p3=ヒットチェック領域(%)
p4=不透明フラグ( 0=透明 / 1=不透明 )

%inst
スプライトのキャラクタパターンを定義する際の、サイズを指定します。
(p1,p2)がキャラクタのX,Yサイズになります。
^
p3は当たり判定を行なう際のヒットチェック領域が、 何%になるかを指定します。100を指定すると、(p1,p2)で指定したサイズいっぱいにヒットチェックを行ないます。 0を指定すると、そのキャラクタは当たり判定を持たなくなります。
p4は、0ならば透明色を透過し、1ならば不透明のキャラクタパターンになります。
^
キャラクタのX,Yサイズには特に制限はありませんが、 オフスクリーンバッファからはみ出すようなキャラクタパターンの指定は無効になります。es_size命令の設定は、以降のキャラクタ定義でずっと有効になります。
%href
es_pat




%index
es_link
アニメーション設定
%group
拡張画面制御命令
%prm
p1,p2
p1=キャラクタNo.
p2=ループアニメーションするキャラクタNo.

%inst
キャラクタのループアニメーションを設定するための命令です。
p1で指定したキャラクタNo.が、指定されたフレームだけ表示した後に、 p2で指定したキャラクタNo.に戻るように設定を行ないます。
%href
es_pat

%sample
es_size 32,32
es_pat 1,0,0,8
es_pat 2,32,0,8
es_pat 3,64,0,8
es_pat 4,96,0,8
es_link 4,1




%index
es_check
衝突判定取得
%group
拡張画面制御命令
%prm
p1,p2,p3,p4,p5,p6
p1=結果が代入される変数名
p2=チェックの対象となるスプライトNo.
p3=検索対象となるtype値
p4=判定フラグ(0=回転を考慮しない、1=回転を考慮する)
p5=検索を開始するスプライトNo.
p6=検索を終了するスプライトNo.

%inst
スプライト同士の衝突判定を行ないます。
^
p2で指定されたスプライトNo.と衝突している(重なっている) スプライトを検索して、p1で指定した変数に結果を代入します。
^
p3で衝突判定の対象となるtype値を指定することができます。
p3が省略されるか、 0の場合は、すべてのスプライトとの衝突を判定します。
p3のtype値には、複数のtypeを同時に指定することができます。
たとえば、type1とtype4を対象にする場合は、1+4で5を指定します。
^
衝突判定には、キャラクタパターンを登録した時に指定したヒットチェック領域(%)が使用されます。 実際に画像が重なっていても、ヒットチェック領域の範囲が重ならない限りは衝突とみなされません。
^
結果はp1で指定した変数に代入されます。もし、衝突しているスプライトがなかった場合には-1が、 衝突しているスプライトがあれば、そのスプライトNo.が代入されます。衝突しているスプライトが複数あった場合には、スプライトNo.の小さいものが優先されます。
^
es_effect命令を使ってスプライトを回転表示した場合、 そのままだと回転していない状態での衝突判定を行ってしまいます。そこで、es_check命令実行時にp4に 1を指定することでスプライトの回転を当たり判定に反映させることができるようになります。
^
p5,p6で衝突判定を検索するスプライトの始点・終点を指定できます。 p5がp6より大きなスプライトNo.を指定した場合、通常とは逆に小さいスプライトNo.に向かって検索を行います。
%href
es_type
es_size




%index
es_offset
オフセット座標設定
%group
拡張画面制御命令
%prm
p1,p2
p1=オフセットX値
p2=オフセットY値

%inst
すべてのスプライトの表示を、オフセット値で指定した数だけずらして表示します。
この命令で設定したオフセット値は、 es_draw命令で描画を行なった時に反映されます。
%href
es_draw




%index
es_flag
flag値設定
%group
拡張画面制御命令
%prm
p1,p2
p1=スプライトNo.
p2=flag値

%inst
p1で指定したスプライトのflag値を変更します。
flag値は、スプライトが有効になっている場合は、 $100(256)が自動的に設定されています。通常は特にいじる必要はありません。
^p
flag値=
  0    :  スプライト未登録
  bit 0-6 : 1〜127 カウントダウンタイマー
  bit 7   : カウントダウン消失SWITCH
  bit 8 :  $100 スプライト表示ON(ESSPFLAG_STATIC)
  bit 9 :  $200 スプライト移動ON(ESSPFLAG_MOVE)
  bit10 :  $400 自由落下移動ON(ESSPFLAG_GRAVITY)
  bit11 :  $800 BGとリンクして移動(未実装)
  bit12 : $1000 ボーダー消去を無効にする(ESSPFLAG_NOWIPE)
  bit13 : $2000 ボーダーXで反転SWITCH(ESSPFLAG_XBOUNCE)
  bit14 : $4000 ボーダーYで反転SWITCH(ESSPFLAG_YBOUNCE)
  bit15 : $8000 カウントダウンタイマ点滅(ESSPFLAG_BLINK)
  bit16 :$10000 非表示にする(ESSPFLAG_NODISP)


%index
es_chr
chr値設定
%group
拡張画面制御命令
%prm
p1,p2
p1=スプライトNo.
p2=キャラクタNo.

%inst
p1で指定したスプライトのキャラクタNo.を変更します。




%index
es_type
type値設定
%group
拡張画面制御命令
%prm
p1,p2
p1=スプライトNo.
p2=type値

%inst
p1で指定したスプライトのtype値を変更します。
スプライトのtype値は、ユーザーの好きに設定することができる識別用の値となります。
設定できる値は、

	1,2,4,8,16,32,64,128,256,512,1024,2048,4096,8192,16384,32768…

といった特定ビットがONになった数値です。
(type値は、32bitの幅を持っています。)
es_set命令でスプライトを設定した直後は、type値は1になっています。
この値は、衝突判定やスプライトの検索対象を指定するのに使用されます。
スプライトが示す物体の種別を登録しておくのが主な利用法です。


%index
es_kill
スプライト削除
%group
拡張画面制御命令
%prm
p1
p1=スプライトNo.

%inst
p1で指定したスプライトNo.を削除します。

%href
es_clear




%index
es_clear
複数スプライト削除
%group
拡張画面制御命令
%prm
p1,p2
p1=スプライトNo.
p2=削除される個数

%inst
p1で指定したスプライトNo. 以降のスプライトが削除され未登録になります。
p2で削除されるスプライトの数を指定することができます。
p1とp2の指定を省略した場合は、すべてのスプライトが削除されます。
%href
es_kill




%index
es_pos
スプライト座標設定
%group
拡張画面制御命令
%prm
p1,p2,p3
p1=スプライトNo.
p2=スプライトX座標
p3=スプライトY座標

%inst
スプライトの座標を変更します。
p1でスプライトNo.を指定して、(p2,p3)でX,Y座標を設定します。
^
es_posは、設定済みのスプライトの座標だけを変更する命令です。




%index
es_apos
スプライト移動設定
%group
拡張画面制御命令
%prm
p1,p2,p3,p4
p1=スプライトNo.
p2=1フレームにX方向に移動するドット数
p3=1フレームにY方向に移動するドット数
p4=移動スピード(%)

%inst
スプライトを自動的に移動させるための設定をします。
p1でスプライトNo.、p2,p3でX,Y方向の増分を指定します。
^
p4で移動スピードを%で指定します。p4を省略するか、100を指定した場合は、100%のスピードとなり、1フレームに(p2,p3)で指定した増分だけ移動し続けます。
もし、移動スピードを50(%)にして、増分が(+4,-2)に指定された場合は、実際には、(+2,-1)の増分になります。
増分の単位は、1ドット以下になった場合でも正確に移動を行ないます。 たとえば、1フレームに(1,0)の移動を10%で行なった場合でも、10フレーム後に1ドット移動するように計算されます。
%href
es_adir
es_aim




%index
es_aim
スプライト参照座標設定
%group
拡張画面制御命令
%prm
p1,p2,p3,p4
p1=スプライトNo.
p2=移動先のX座標
p3=移動先のY座標
p4=移動スピード(%)

%inst
es_aim命令は、 es_adir命令と同じく指定した方向にスプライトを移動させるためのものです。 
es_aim命令では、方向の替わりに移動する目標となるX,Y座標を指定します。スプライトは、現在の座標から、目標となる座標への方向を計算し移動を開始します。
^
この命令は、たとえば敵から発射されるミサイルがプレイヤーを狙って移動するようにしたい時などに役立ちます。
^
p4で移動スピードを%で指定します。 p3を省略するか、100(%)を指定した場合には、指定した方向に1フレームにつき1ドットの距離を移動します。
^
この命令を実行するとシステム変数statに移動方向が返ります。
これを利用して自機を狙う3方向弾などを作成することができます。
%href
es_apos
es_adir




%index
es_ang
角度取得
%group
拡張画面制御命令
%prm
p1,p2,p3,p4
p1=基準点のX座標
p2=基準点のY座標
p3=目的点のX座標
p4=目的点のY座標

%inst
システム変数statに(p1,p2)から見た(p3,p4)の方向が返ります。
es_aimを使っても方向を得ることはできますが、この命令を使えばスプライトを使わずに方向を得ることができます。



%index
es_get
スプライト情報取得
%group
拡張画面制御命令
%prm
p1,p2,p3
p1=情報が代入される変数名
p2=スプライトNo.
p3=info number

%inst
p1で指定した変数名に、p2のスプライトNo.の情報を代入します。
情報の種類は、p3のinfo numberで指定します。
[]内はヘッダファイルで定義されている定数です。
^p
info number :
	  0 = flag値                                    [ESI_FLAG_LOW]
	  3 = スプライトのX座標                         [ESI_POSX_INT]
	  5 = スプライトのY座標                         [ESI_POSY_INT]
	  7 = 1フレームに移動する距離X                  [ESI_SPDX_INT]
	  9 = 1フレームに移動する距離Y                  [ESI_SPDY_INT]
	 10 = プログレスカウント値(未使用)              [ESI_PRGCOUNT]
	 11 = アニメーションカウント値                [ESI_ANIMECOUNT]
	 12 = キャラクタNo.                                [ESI_CHRNO]
	 13 = type値                                        [ESI_TYPE]
  14,15 = 特殊動作情報(未使用)                   [ESI_EXECPTR_LOW,
                                                 ESI_EXECPTR_HIGH]
	 16 = 自由落下加速度X                             [ESI_ACCELX]
	 17 = 自由落下加速度Y                             [ESI_ACCELY]
	 18 = 弾みやすさ                               [ESI_BOUNCEPOW]
	 19 = バウンドフラグ                          [ESI_BOUNCEFLAG]
	 20 = 点滅フラグ                               [ESI_BLINKFLAG]
  22,23 = 点滅カウント値                      [ESI_BLINKCOUNT_LOW,
                                              ESI_BLINKCOUNT_HIGH]
	 24 = Direct3D使用フラグ                         [ESI_D3DFLAG]
	 25 = 表示Xサイズ                                  [ESI_DISPX]
	 26 = 表示Yサイズ                                  [ESI_DISPY]
	 27 = X軸回転角                                     [ESI_ROTX]
	 28 = Y軸回転角                                     [ESI_ROTY]
	 29 = Z軸回転角                                     [ESI_ROTZ]
	 30 = ブレンドファクター                     [ESI_BLENDFACTOR]
	 31 = α値                                         [ESI_ALPHA]
	 32 = 点滅用スプライト表示フラグ                [ESI_DISPFLAG]
  34,35 = ライト値                                 [ESI_LIGHT_LOW,
                                                   ESI_LIGHT_HIGH]
	 36 = 優先順位                                  [ESI_PRIORITY]



%index
es_ini
システムの初期化
%group
拡張画面制御命令
%prm
p1,p2
p1=スプライトの最大数
p2=キャラクタ定義の最大数
p3=周の精度(64〜4096)

%inst
HSPDXFIX.DLLシステムの初期化を行ないます。
パラメータを省略すると、スプライトは512個まで、 キャラクタ定義数は1024個までを最大としてスプライトを初期化します。es_ini命令は何度でも実行することができるので、スプライトをすべてクリアしたい時などにも使用可能です。
^
p3はes_adir命令などで使用する角度を、一周何度にするかを指定します。 指定できる数値は、64と256の倍数、そして360の倍数です。それ以外の数値を指定した場合は、指定した値未満で条件に合う一番近い数値が設定されます。
^
空きメモリが不足しているなど、何らかの理由でメモリ確保に失敗した時は、statに1が返ります。



%index
es_gravity
落下加速度設定
%group
拡張画面制御命令
%prm
p1,p2,p3
p1=スプライトNo.(-1〜)
p2=X方向の加速度(-32767〜32767)
p3=Y方向の加速度(-32767〜32767)

%inst
es_flag命令で自由落下移動をONにしたときの加速度を設定します。
^
p2、p3は1フレームごとに加算される移動量で、256で1ドットとなります。
p1に-1を指定すると、デフォルト値を設定することができます。　この値は、es_set命令を実行した時に設定される値で、初期値はp2が0、p3が256となっています。



%index
es_exnew
新規スプライト取得
%group
拡張画面制御命令
%prm
p1,p2,p3,p4
p1=新規No.が代入される変数名
p2=検索を開始するスプライトNo.
p3=検索を終了するスプライトNo.
p4=増分

%inst
この命令は、スプライトNo.の中で使われていないNo.を検索します。
p2〜p3で指定したNo.の間で空きのあるNo.を、p1で指定した変数に代入します。
空きがない場合は、-1が代入されます。
^
p4には検索するスプライトNo.の増分を指定します。 省略するとp2、p3から自動的に設定するため、通常は明示する必要はありません。
^
※es_new命令と同様の処理を行いたい場合は、p3に-1を指定してください。




%index
es_new
新規スプライト取得
%group
拡張画面制御命令
%prm
p1,p2
p1=新規No.が代入される変数名
p2=検索を開始するスプライトNo.

%inst
この命令は、スプライトNo.の中で使われていないNo.を検索します。
p2で指定したNo.以降で空きのあるNo.を、p1で指定した変数に代入します。空きがない場合は、-1が代入されます。
^
この命令は、以前のバージョンとの互換性のために残された命令です。
以前のバージョンを使用して作成されたスクリプトを動かす時以外はes_exnew命令を使用するようにしてください。



%index
es_cos
三角関数
%group
拡張画面制御命令
%prm
p1,p2
p1=結果が代入される変数名
p2=角度(0〜±n)
※n=es_ini第3パラメータで設定した精度

%inst
変数p1に、角度p2のコサインを代入します。
p2の範囲はes_iniで設定した値までです。
得られる値は、小数部10ビットの固定小数です。つまり、本来得られるべき値を1024倍した整数が返ってきます。
^
※角度は正の数であればある程度は範囲をオーバーしても正確に動作するようにしてありますが、負の数についてはそれを保証していませんので注意してください。



%index
es_sin
三角関数
%group
拡張画面制御命令
%prm
p1,p2
p1=結果が代入される変数名
p2=角度(0〜±n)
※n=es_ini第3パラメータで設定した精度

%inst
変数p1に、角度p2のサインを代入します。
p2の範囲はes_iniで設定した値までです。
得られる値は、小数部10ビットの固定小数です。つまり、本来得られるべき値を1024倍した整数が返ってきます。
^
※角度は正の数であればある程度は範囲をオーバーしても正確に動作するようにしてありますが、負の数についてはそれを保証していませんので注意してください。




%index
es_adir
スプライト移動方向設定
%group
拡張画面制御命令
%prm
p1,p2,p3
p1=スプライトNo.
p2=移動する方向(0〜)
p3=移動スピード(%)

%inst
スプライトを自動的に移動させるための設定をします。
^
p1でスプライトNo.、p2で方向を指定します。 方向は、es_iniで指定した数値までで指定します。0が真下となり、反時計回りに増加していきます。
^
p3で移動スピードを%で指定します。 p3を省略するか、100(%)を指定した場合には、指定した方向に1フレームにつき1ドットの距離を移動します。
^
p4で移動スピードを%で指定します。p4を省略するか、100を指定した場合は、100%のスピードとなり、1フレームに1ドットの速度で移動し続けます。



%index
es_move
スプライト移動
%group
拡張画面制御命令
%prm
p1,p2,p3
p1=移動を行うフレーム数(1〜)
p2=移動開始スプライトNo.
p3=移動するスプライトの個数
p4=アニメーション制御フラグ(0〜1)
%inst
^p
p4=0 : アニメーションを行う
p4=1 : アニメーションを行わない
^p
スプライトの移動を行います。 es_draw命令からスプライトの描画を抜いたもので、主に処理落ち時のフレームスキップに用います。
偶数フレームのスキップが行われた際に点滅が止まるのを防ぐため、スプライトの点滅はパラメータの設定に関係なく es_draw命令で行われます。
%href
es_draw



%index
es_draw
スプライト描画
%group
拡張画面制御命令
%prm
p1,p2,p3,p4
p1=描画開始スプライトNo.
p2=描画するスプライトの個数
p3=スプライト固定フラグ(0〜)
p4=描画順序(0〜1)

%inst
^p
p3=0 : 通常の動作を行う
bit1 : スプライトを移動させない
bit2 : アニメーションを行わない
^
p4=0 : スプライトNo.順に描画する
p4=1 : 優先順位順に描画する
^p
登録されているスプライトを画面に描画します。
通常は、 p1,p2のパラメータを省略して使用すれば、すべてのスプライトを描画することが可能です。
^
登録されているスプライトの一部だけを描画したい場合は、p1に開始スプライトNo.、p2に描画する個数を指定してください。
^
p4に1を指定すると、es_set命令やes_setpri命令で指定した優先順位の順にスプライトを描画します。ただし優先順位のソートには多少時間がかかるため、必要が無ければ従来通りスプライトNo. 順で描画をすることをおすすめします。
^
この命令を実行すると、描画されたスプライトは移動を行いますが、 p3に1を指定すること描画のみを行うようにすることができます。 また、2を指定することでアニメーションを停止させることができます。
%sample
*gmain
	stick ky,$1f			; キーの情報を取得
	if ky&$80 : goto *owari	; [ESC]中断チェック
	es_cls					; 画面クリア
	es_draw 				; スプライト描画
	es_sync 				; 画面の更新
	await 0 				; Systemアイドル
	goto *gmain




%index
es_bound
弾みやすさ設定
%group
拡張画面制御命令
%prm
p1,p2,p3
p1=スプライトNo.(-1〜)
p2=弾みやすさ(0〜256)
p3=フラグ(1=X方向 2=Y方向 3=両方 デフォルト=3)

%inst
es_flag命令で自由落下移動をONにしたときに、 画面下部(または上部)で跳ね返る際の弾みやすさを設定します。この値が大きいほど跳ね返り時に勢いが失われなくなります。
^
p3は画面の上下端、あるいは左右端に当たった際に跳ね返りを行うか行わないかを設定できます。ただし、このフラグは自由落下が発生する方向にのみ適用されます。
^
p1に-1を指定すると、デフォルト値を設定することができます。　この値は、es_set命令を実行した時に設定される値で、初期値は128となっています。




%index
es_effect
スプライト特殊効果設定
%group
拡張画面制御命令
%prm
p1,p2,p3,p4,p5,p6,p7,p8,p9
p1=スプライトNo.
p2,p3=表示サイズ
p4,p5,p6=回転角
p7=ブレンドファクター(-1で合成OFF)
p8=α値(0〜256)
p9=ライト色(0〜$ffffff)
%inst
スプライトを描画する際のエフェクトを設定します。省略されたパラメータは前回実行時の設定を保持します。
回転角の有効範囲はes_excopy命令と違って es_ini命令での設定に依存しますので注意してください。
^
なお、現バージョンでは回転を行っても当たり判定が変わりませんので注意してください。




%index
es_pat
キャラクタ画像定義
%group
拡張画面制御命令
%prm
p1,p2,p3,p4
p1=キャラクタNo.
p2=キャラクタパターンの左上X座標
p3=キャラクタパターンの左上Y座標
p4=表示フレーム数(0)
%inst
スプライトのキャラクタパターンを定義します。
^
p1で指定したキャラクタNo.に、 (p2,p3)の座標からes_sizeで設定した大きさのキャラクタが登録されます。
ここで対象となる画像は、直前にes_buffer命令でVRAMに転送された画像データとなります。この画像の中の一部を切り出し
てきてキャラクタパターンとして登録しておきます。
es_pat命令1回で、指定したキャラクタNo.にキャラクタパターンが登録されます。たくさんのキャラクタパターンが必要な場合は、そのぶん登録をしておく必要があります。
^
p4のパラメータは、キャラクタアニメーションをするための設定です。
0ならば、アニメーションなし。1以上ならば、指定したフレーム数だけそのキャラクタを表示した後、 次のキャラクタ(キャラクタNo.+1)を表示するように設定されます。
%href
es_link



%index
es_setp
スプライトパラメータ設定
%group
拡張画面制御命令
%prm
p1,p2,p3
p1=スプライトNo.
p2=info number
p3=変更する値(-32768〜32767)
%inst
スプライトの情報を直接変更します。p2についてはes_getの説明を参照してください。
%href
es_get




%index
es_setpri
スプライト優先順位設定
%group
拡張画面制御命令
%prm
p1,p2
p1=スプライトNo.
p2=優先順位(-32768〜32767)
%inst
スプライトの優先順位を変更します。
%href
es_set
es_draw


